{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js","components/Logo/Logo2.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","alt","src","Logo2","SignIn","id","htmlFor","type","name","value","Register","Rank","ImageLinkForm","onInputChange","onButtonSubmit","onChange","FaceRecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.2a2a828d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n\t  if(isSignedIn) {\t\r\n\t  \t   return (\r\n\t\t\t   <nav style = {{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t      <p onClick = { () => onRouteChange('signout')} className = 'f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n\t\t\t   </nav>\r\n\t\t\t);    \r\n\t\t}  \r\n\t\telse {\r\n\t\t\treturn (\r\n\t          <nav style = {{display: 'flex', justifyContent: 'flex-end'}}>\r\n\t\t\t      <p onClick = { () => onRouteChange('signin')} className = 'f3 link dim black underline pa3 pointer'>Sign In</p>\r\n\t\t\t      <p onClick = { () => onRouteChange('register')} className = 'f3 link dim black underline pa3 pointer'>Register</p>\r\n\t\t\t  </nav>\r\n\t\t\t);  \r\n\t\t}    \r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt'\r\n//import Logo1 from './Logo1.png'; \r\nimport Logo2 from './Logo2.png';\r\nimport './Logo.css'\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t    <div className = 'ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n \t\t\t\t<div className=\"Tilt-inner pa3\">\r\n \t\t\t\t\t<img style = {{paddingTop: '5px'}} alt = 'logo' src = {Logo2} /> \r\n \t\t\t\t</div>\r\n\t\t\t</Tilt> \r\n\t    </div> \r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst SignIn = ({ onRouteChange }) => {\r\n\treturn (\r\n\t <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\t\r\n\t\t   <main className=\"pa4 black-80\">\r\n\t\t\t  <div className=\"measure\">\r\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t        <input className=\"pa2 input-reset ba b--black-50 bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t        <input className=\"b pa2 input-reset ba b--black-50 bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className=\"\">\r\n\t\t\t\t      <input \r\n\t\t\t\t         onClick = { () => onRouteChange('home')}\r\n\t\t\t\t         className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t         type=\"submit\" \r\n\t\t\t\t         value=\"Sign in\" \r\n\t\t\t\t        />\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t\t      <p onClick = { () => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n\t\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</main>\r\n      </article>\r\n    );\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n\treturn (\r\n\t <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\t\r\n\t\t   <main className=\"pa4 black-80\">\r\n\t\t\t  <div className=\"measure\">\r\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t\t\t\t        <input className=\"pa2 input-reset ba b--black-50 bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t        <input className=\"pa2 input-reset ba b--black-50 bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t        <input className=\"b pa2 input-reset ba b--black-50 bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className=\"\">\r\n\t\t\t\t      <input \r\n\t\t\t\t         onClick = { () => onRouteChange('home')}\r\n\t\t\t\t         className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t         type=\"submit\" \r\n\t\t\t\t         value=\"Register\" \r\n\t\t\t\t        />\r\n\t\t\t\t    </div>\r\n\t\t\t  </div>\r\n\t\t\t</main>\r\n      </article>\r\n    );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n\r\n\r\nconst Rank = () => {\r\n\treturn (\r\n\t    <div>\r\n\t       <div className = 'white f3'>\r\n               {'Robert, your current rank is...'}\r\n\t       </div>\r\n\t       <div className = 'white f1'>\r\n               {'#5'}\r\n\t       </div>\r\n\t    </div> \r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n\treturn (\r\n\t    <div>\r\n            <p className = 'f3'>\r\n              {'The FRWA will detect faces in your pictures, Give it a try!!!'}\r\n            </p>\r\n            <div className = 'center'>\r\n               <div className = 'pa4 br3 shadow-5 center form'>\r\n\t               <input className = 'f4 pa2 w-70 center' type = 'text' onChange = {onInputChange}/>\r\n\t               <button \r\n\t                   className = 'w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\r\n\t                   onClick = {onButtonSubmit}  \r\n\t                >Detect</button>\r\n\t            </div>\r\n\t        </div>    \r\n\t    </div> \r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n\treturn (\r\n\t   <div className = 'center ma'>\r\n\t      <div className = 'absolute mt2'> \r\n               <img id = 'inputimage' alt = '' src = {imageUrl} width = '500px' height = 'auto' />\r\n\t           <div className = 'bounding-box' style = {{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}>\r\n\t           </div>\r\n\t      </div>  \r\n\t   </div> \r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\nconst app = new Clarifai.App({\n apiKey: '5dc31f858a694a68933be39da586fdbe'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 70,\n      density: {\n        enable: true,\n        value_area: 600\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n\n    }\n  }\n  \n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    //console.log(width,height);\n    return{\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    //console.log({box});\n    this.setState({box: box});\n  }\n  onInputChange = (event) => {\n    //console.log(event.target.value);\n    this.setState({input: event.target.value});\n  }\n  \n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    //console.log('click');\n    // At the bottom after declaring model if we use this.state.imageUrl we get error check the link in resources.\n    app.models.predict(\n    Clarifai.FACE_DETECT_MODEL, \n    this.state.input)\n      //.then(\n      //function(response) {\n        //console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n      //},\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      //function(err) {\n        //console.log(err);\n      //}\n    .catch(err => console.log(err));\n  } \n\n  onRouteChange = (route) => {\n    if(route === 'signout') {\n      this.setState({isSignedIn: false})\n    }\n    else if(route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});  \n  }\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n         <Particles className='particles' \n            params={particlesOptions}\n          />\n         <Navigation isSignedIn = {isSignedIn} onRouteChange = {this.onRouteChange} />\n         { route === 'home' \n           ?  <div>\n                  <Logo />\n                  <Rank />\n                  <ImageLinkForm \n                    onInputChange = {this.onInputChange} \n                    onButtonSubmit = {this.onButtonSubmit} \n                  />\n                  <FaceRecognition box = {box} imageUrl = {imageUrl} /> \n              </div>  \n            : (\n                 route === 'signin'\n                 ? <SignIn onRouteChange = {this.onRouteChange} />\n                 : ( route === 'register'\n                     ? <Register onRouteChange = {this.onRouteChange} />\n                     : <SignIn onRouteChange = {this.onRouteChange} />\n                    ) \n              )      \n          }\n      </div>\n    );\n  }  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />\n  /*</React.StrictMode>*/,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Logo2.21b2a7f5.png\";"],"sourceRoot":""}